<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on Roman Dushko, Software Engineer</title>
    <link>/tags/functional-programming/</link>
    <description>Recent content in Functional Programming on Roman Dushko, Software Engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 19 Oct 2016 12:16:05 +0000</lastBuildDate>
    
	<atom:link href="/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional approach in PHP</title>
      <link>/2016/10/functional-approach-in-php/</link>
      <pubDate>Wed, 19 Oct 2016 12:16:05 +0000</pubDate>
      
      <guid>/2016/10/functional-approach-in-php/</guid>
      <description>The code snippet below will only work in PHP-5.3+!.
Isn&amp;#8217;t it the famous functional programming with functions as first class citizens, closures and other functional bla-bla?
&amp;lt;?php function one($a = 0) { return function(callable $b) use ($a) { return call_user_func($b, $a); }; } print_r(call_user_func(one(1), function ($x) { return $x + 4; } ));  This was created just for fun. As you may see, in place of callable you can put any valid PHP callable, e.</description>
    </item>
    
  </channel>
</rss>