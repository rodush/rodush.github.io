<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Composer on Roman Dushko, Software Engineer</title>
    <link>/categories/composer/</link>
    <description>Recent content in Composer on Roman Dushko, Software Engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 Jul 2012 12:54:31 +0000</lastBuildDate>
    
	<atom:link href="/categories/composer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Form builder — entity field: «Class BundleAliasName:EntityClassName does not exist «</title>
      <link>/2012/07/form-builder-entity-field-class-bundlealiasnameentityclassname-does-not-exist/</link>
      <pubDate>Thu, 26 Jul 2012 12:54:31 +0000</pubDate>
      
      <guid>/2012/07/form-builder-entity-field-class-bundlealiasnameentityclassname-does-not-exist/</guid>
      <description>После обновления symfony-2.1 до версии из транка (symfony-2.1.0-beta4) отвалилась форма, в которой я использовал поле типа entity, где в качестве класса сущности указал не полный путь к классу, а через bundle alias:
$builder -add( &#39;field_name, &#39;entity&#39;, array( &#39;class&#39; = &#39;BundleAliasName:EntityClassName&#39;, &#39;multiple&#39; = true ) ) .....  Код выбрасывал исключение с сообщением
 &amp;#171;Class BundleAliasName:EntityClassName does not exist&amp;#187;
 Если прописать полный путь через пространство имен:
array( &#39;class&#39; = &#39;Full\Bundle\Path\Entity\EntityClassName&#39;, )  то все работало хорошо.</description>
    </item>
    
    <item>
      <title>Как обновить проект с symfony-2.0 до symfony-2.1</title>
      <link>/2012/07/%D0%BA%D0%B0%D0%BA-%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82-%D1%81-symfony-2-0-%D0%B4%D0%BE-symfony-2-1/</link>
      <pubDate>Sat, 07 Jul 2012 19:57:18 +0000</pubDate>
      
      <guid>/2012/07/%D0%BA%D0%B0%D0%BA-%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82-%D1%81-symfony-2-0-%D0%B4%D0%BE-symfony-2-1/</guid>
      <description>Изначально я создавал свой проект на версии symfony 2.0 без vendors (standard edition). Все зависимости были установлены через
php bin/vendors install Проект находился в git-репозитории.
Сразу оговорка &amp;#8212; на момент написания статьи версия symfony 2.1 находилась в стадии бета-тестирования.
Тем не менее, основная тенденция уже была понятна и значительных изменений в АПИ не предвиделось.
Одно из ключевых нововведений в symfony 2.1 &amp;#8212; использование Composer.
На вебсайте фреймворка Symfony можно найти описание процесса создания нового проекта, но нет информации как обновить существующий.</description>
    </item>
    
    <item>
      <title>Composer — minimum-stability по-умолчанию считается stable</title>
      <link>/2012/07/composer-minimum-stability-%D0%BF%D0%BE-%D1%83%D0%BC%D0%BE%D0%BB%D1%87%D0%B0%D0%BD%D0%B8%D1%8E-%D1%81%D1%87%D0%B8%D1%82%D0%B0%D0%B5%D1%82%D1%81%D1%8F-stable/</link>
      <pubDate>Wed, 04 Jul 2012 20:39:30 +0000</pubDate>
      
      <guid>/2012/07/composer-minimum-stability-%D0%BF%D0%BE-%D1%83%D0%BC%D0%BE%D0%BB%D1%87%D0%B0%D0%BD%D0%B8%D1%8E-%D1%81%D1%87%D0%B8%D1%82%D0%B0%D0%B5%D1%82%D1%81%D1%8F-stable/</guid>
      <description>Сегодня (4 июля 2012) Composer изменяет значение по-умолчанию свойства stability с dev на stable.
Подробнее здесь и здесь.
Что это значит? Что по-умолчанию Composer будет игнорировать пакеты RC, beta, alpha или dev.
Столкнулся я с этим, когда попытался проапдейтить зависимости проекта, использующего symfony-2.1.x, которая на момент написания заметки находится на стадии бета-тестирования.
&amp;lt;br /&amp;gt; rodush@debian:~/gtrs$ php composer.phar update&amp;lt;br /&amp;gt; Updating dependencies&amp;lt;br /&amp;gt; Your requirements could not be solved to an installable set of packages.</description>
    </item>
    
  </channel>
</rss>